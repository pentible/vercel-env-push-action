name: ci
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test-action:
    name: Test Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup test data
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # link project
          vercel --token="$VERCEL_TOKEN" link --project 'vercel-env-push-action' --yes

          # remove envs from previous runs
          vercel --token="$VERCEL_TOKEN" env rm --yes EXAMPLE_PLAIN_NEW production || true
          vercel --token="$VERCEL_TOKEN" env rm --yes EXAMPLE_PLAIN_OLD production || true
          vercel --token="$VERCEL_TOKEN" env rm --yes EXAMPLE_SENSITIVE_OLD production || true
          vercel --token="$VERCEL_TOKEN" env rm --yes EXAMPLE_PLAIN_CHANGED production || true
          vercel --token="$VERCEL_TOKEN" env rm --yes EXAMPLE_SENSITIVE_CHANGED production || true

          # setup for current run
          echo 'plain value' | vercel --token="$VERCEL_TOKEN" env add EXAMPLE_PLAIN_OLD production
          echo 'sensitive value' | vercel --token="$VERCEL_TOKEN" env add --sensitive EXAMPLE_SENSITIVE_OLD production
          echo 'plain value' | vercel --token="$VERCEL_TOKEN" env add EXAMPLE_PLAIN_CHANGED production
          echo 'sensitive value' | vercel --token="$VERCEL_TOKEN" env add --sensitive EXAMPLE_SENSITIVE_CHANGED production
      - name: Test Action
        id: action
        uses: ./
        with:
          vercelToken: ${{ secrets.VERCEL_TOKEN }}
          projectId: vercel-env-push-action
          target: production
          envs: |
            {
              "EXAMPLE_PLAIN_CHANGED": "updated plain value",
              "EXAMPLE_SENSITIVE_CHANGED": "updated sensitive value",
              "EXAMPLE_PLAIN_NEW": "new plain value"
            }
      - name: Print Output
        run: echo "${{ steps.action.outputs.conclusion }}"
